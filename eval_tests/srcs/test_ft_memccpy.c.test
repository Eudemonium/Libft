#include "libft.h"
#include "libft_test.h"

#ifdef assert
#undef assert
#endif

#define assert(eval, src, c, len) \
	if (eval) ++success; else {++failure; printf("fail: \"%s: ('%c', %d)\"\n", src, c, len); }

int	test_ft_memccpy(void)
{
	unsigned	success = 0;
	unsigned	failure = 0;
	char		*func = "ft_memccpy";
	printf("===== %s =====\n", func);
	{
		char	src[] = "test basic du memccpy !";
		char	*dst_1 = (char *)malloc(23);
		char	*dst_2 = (char *)malloc(23);
		dst_1 = memset(dst_1, '0', 23);
		dst_2 = memset(dst_2, '0', 23);
		char	*expect = (char *)memccpy(dst_1, src, 'm', 23);
		char	*actual = (char *)ft_memccpy(dst_2, src, 'm', 23);
		assert(strcmp(expect, actual) == 0, src, 'm', 23);
	}
	{
		char	src[] = "test basic du memccpy !";
		char	*dst_1 = (char *)malloc(21);
		char	*dst_2 = (char *)malloc(21);
		char	*expect = (char *)memccpy(dst_1, src, 'm', 0);
		char	*actual = (char *)ft_memccpy(dst_2, src, 'm', 0);
		assert(expect == actual, src, 'm', 20);
	}
	printf("%i of %i tests passed.\n", success, (success + failure));
	return (failure == 0);
}
