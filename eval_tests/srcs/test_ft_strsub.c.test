#include "libft.h"
#include "libft_test.h"

#ifdef assert
#undef assert
#endif

#define assert(eval, src, start, len) \
	if (eval) ++success; else {++failure; printf("fail: (%lu, %lu) %s\n", start, len, src); }

int	test_ft_strsub(void)
{
	unsigned	success = 0;
	unsigned	failure = 0;
	char		*func = "ft_strsub";
	printf("===== %s =====\n", func);
	{
		char src[] = "Basic strsub.";
		size_t	start = 5;
		size_t	len = 6;
		char	expect[] = "strsub";
		char	*actual = ft_strsub(src, start, len);
		assert(strcmp(expect, actual) == 0, src, start,len);
	}
	{
		char src[] = "len 0";
		size_t	start = 0;
		size_t	len = 0;
		char	expect[] = "";
		char	*actual = ft_strsub(src, start, len);
		assert(strcmp(expect, actual) == 0, src, start,len);
	}
	{
		char src[] = "";
		size_t	start = 0;
		size_t	len = 10;
		char	expect[] = "";
		char	*actual = ft_strsub(src, start, len);
		assert(strcmp(expect, actual) == 0, src, start,len);
	}
	{
		char src[] = "start '\\0";
		size_t	start = strlen(src);
		size_t	len = 10;
		char	expect[] = "";
		char	*actual = ft_strsub(src, start, len);
		assert(strcmp(expect, actual) == 0, src, start,len);
	}
	printf("%i of %i tests passed.\n", success, (success + failure));
	return (failure == 0);
}
