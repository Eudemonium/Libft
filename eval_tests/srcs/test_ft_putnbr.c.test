#include "libft.h"
#include "libft_test.h"

#ifdef assert
#undef assert
#endif

#define assert(eval, test) \
	if (eval) ++success; else {++failure; printf("\nfail: %d\n", test); }

int	test_ft_putnbr(void)
{
	unsigned	success = 0;
	unsigned	failure = 0;
	char		*func = "ft_putnbr";

	printf("%s\t", func);
	{
		int		out = dup(STDOUT_FILENO);
		int		num = -1234;
		char	buf[6];
		buf[5]  = 0;
		char	*file = "./output/ft_putnbr";
		int	fd = open(file, O_RDWR|O_CREAT, 0755);
		dup2(fd, STDOUT_FILENO);
		ft_putnbr(num);
		lseek(fd, 0, SEEK_SET);
		read(fd, buf, 5);
		dup2(out, STDOUT_FILENO);
		close(out);
		close(fd);
		assert(strncmp(buf, "-1234", 5) == 0, num);
	}
	{
		int		out = dup(STDOUT_FILENO);
		int		num = 0;
		char	buf[2];
		buf[1]  = 0;
		char	*file = "./output/ft_putnbr";
		int	fd = open(file, O_RDWR|O_CREAT, 0755);
		dup2(fd, STDOUT_FILENO);
		ft_putnbr(num);
		lseek(fd, 0, SEEK_SET);
		read(fd, buf, 1);
		dup2(out, STDOUT_FILENO);
		close(out);
		close(fd);
		assert(strncmp(buf, "0", 1) == 0, num);
	}
	printf("%i of %i tests passed.\n", success, (success + failure));
	return (failure == 0);
}